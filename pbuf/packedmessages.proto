syntax = "proto3";

// Sourced from PrysmaticLabs
// https://github.com/prysmaticlabs/prysm
// Source: https://github.com/prysmaticlabs/prysm/blob/master/proto/beacon/p2p/v1/messages.proto
// Modified version for testing serialization

message PackedBlock {
  bytes parent_hash = 1;
  uint64 slot_number = 2;
  bytes randao_reveal = 3;
  bytes pow_chain_ref = 4;
  bytes active_state_hash = 5;
  bytes crystallized_state_root = 6;
  repeated PackedAttestationRecord attestations = 8;
}

message PackedCrystallizedState {
  uint64 last_state_recalc = 1;
  uint64 justified_streak = 2;
  uint64 last_justified_slot = 3;
  uint64 last_finalized_slot = 4;
  uint64 current_dynasty = 5;
  uint64 crosslinking_start_shard = 6;
  uint64 total_deposits = 7;
  bytes dynasty_seed = 8;
  uint64 dynasty_seed_last_reset = 9;
  repeated PackedCrosslinkRecord crosslink_records = 10;
  repeated PackedValidatorRecord validators = 11;
  repeated PackedShardAndCommitteeArray indices_for_heights = 12;
}

message PackedShardAndCommitteeArray {
  repeated PackedShardAndCommittee array_shard_and_committee = 1;
}

message PackedShardAndCommittee {
  uint64 shard_id = 1;
  repeated uint32 committee = 2 [packed=true];
}

message PackedValidatorRecord {
  uint64 public_key = 1;
  uint64 withdrawal_shard = 2;
  bytes withdrawal_address = 3;
  bytes randao_commitment = 4;
  uint64 balance = 5;
  uint64 start_dynasty = 6;
  uint64 end_dynasty = 7;
}

message PackedAttestationRecord {
  uint64 slot = 1;
  uint64 shard_id = 2;
  bytes shard_block_hash = 3;
  bytes attester_bitfield = 4;
  repeated bytes oblique_parent_hashes = 5;
  repeated uint64 aggregate_sig = 6 [packed=true];
}

message PackedCrosslinkRecord {
  uint64 dynasty = 1;
  bytes blockhash = 2;
}
